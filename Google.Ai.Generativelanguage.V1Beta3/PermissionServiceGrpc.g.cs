// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ai/generativelanguage/v1beta3/permission_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ai.Generativelanguage.V1Beta3 {
  /// <summary>
  /// Provides methods for managing permissions to PaLM API resources.
  /// </summary>
  public static partial class PermissionService
  {
    static readonly string __ServiceName = "google.ai.generativelanguage.v1beta3.PermissionService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest> __Marshaller_google_ai_generativelanguage_v1beta3_CreatePermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.Permission> __Marshaller_google_ai_generativelanguage_v1beta3_Permission = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.Permission.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest> __Marshaller_google_ai_generativelanguage_v1beta3_GetPermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest> __Marshaller_google_ai_generativelanguage_v1beta3_ListPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse> __Marshaller_google_ai_generativelanguage_v1beta3_ListPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest> __Marshaller_google_ai_generativelanguage_v1beta3_UpdatePermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest> __Marshaller_google_ai_generativelanguage_v1beta3_DeletePermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest> __Marshaller_google_ai_generativelanguage_v1beta3_TransferOwnershipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse> __Marshaller_google_ai_generativelanguage_v1beta3_TransferOwnershipResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission> __Method_CreatePermission = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePermission",
        __Marshaller_google_ai_generativelanguage_v1beta3_CreatePermissionRequest,
        __Marshaller_google_ai_generativelanguage_v1beta3_Permission);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission> __Method_GetPermission = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPermission",
        __Marshaller_google_ai_generativelanguage_v1beta3_GetPermissionRequest,
        __Marshaller_google_ai_generativelanguage_v1beta3_Permission);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest, global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse> __Method_ListPermissions = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest, global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPermissions",
        __Marshaller_google_ai_generativelanguage_v1beta3_ListPermissionsRequest,
        __Marshaller_google_ai_generativelanguage_v1beta3_ListPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission> __Method_UpdatePermission = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePermission",
        __Marshaller_google_ai_generativelanguage_v1beta3_UpdatePermissionRequest,
        __Marshaller_google_ai_generativelanguage_v1beta3_Permission);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeletePermission = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePermission",
        __Marshaller_google_ai_generativelanguage_v1beta3_DeletePermissionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest, global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse> __Method_TransferOwnership = new grpc::Method<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest, global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferOwnership",
        __Marshaller_google_ai_generativelanguage_v1beta3_TransferOwnershipRequest,
        __Marshaller_google_ai_generativelanguage_v1beta3_TransferOwnershipResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ai.Generativelanguage.V1Beta3.PermissionServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PermissionService</summary>
    [grpc::BindServiceMethod(typeof(PermissionService), "BindService")]
    public abstract partial class PermissionServiceBase
    {
      /// <summary>
      /// Create a permission to a specific resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ai.Generativelanguage.V1Beta3.Permission> CreatePermission(global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a specific Permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ai.Generativelanguage.V1Beta3.Permission> GetPermission(global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists permissions for the specific resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse> ListPermissions(global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ai.Generativelanguage.V1Beta3.Permission> UpdatePermission(global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeletePermission(global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Transfers ownership of the tuned model.
      /// This is the only way to change ownership of the tuned model.
      /// The current owner will be downgraded to writer role.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse> TransferOwnership(global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PermissionService</summary>
    public partial class PermissionServiceClient : grpc::ClientBase<PermissionServiceClient>
    {
      /// <summary>Creates a new client for PermissionService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PermissionServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PermissionService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PermissionServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PermissionServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PermissionServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a permission to a specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission CreatePermission(global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a permission to a specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission CreatePermission(global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePermission, null, options, request);
      }
      /// <summary>
      /// Create a permission to a specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> CreatePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a permission to a specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> CreatePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePermission, null, options, request);
      }
      /// <summary>
      /// Gets information about a specific Permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission GetPermission(global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a specific Permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission GetPermission(global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPermission, null, options, request);
      }
      /// <summary>
      /// Gets information about a specific Permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> GetPermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a specific Permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> GetPermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPermission, null, options, request);
      }
      /// <summary>
      /// Lists permissions for the specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse ListPermissions(global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists permissions for the specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse ListPermissions(global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPermissions, null, options, request);
      }
      /// <summary>
      /// Lists permissions for the specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse> ListPermissionsAsync(global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists permissions for the specific resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse> ListPermissionsAsync(global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPermissions, null, options, request);
      }
      /// <summary>
      /// Updates the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission UpdatePermission(global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.Permission UpdatePermission(global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePermission, null, options, request);
      }
      /// <summary>
      /// Updates the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> UpdatePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.Permission> UpdatePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePermission, null, options, request);
      }
      /// <summary>
      /// Deletes the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePermission(global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePermission(global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePermission, null, options, request);
      }
      /// <summary>
      /// Deletes the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePermissionAsync(global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePermission, null, options, request);
      }
      /// <summary>
      /// Transfers ownership of the tuned model.
      /// This is the only way to change ownership of the tuned model.
      /// The current owner will be downgraded to writer role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse TransferOwnership(global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferOwnership(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers ownership of the tuned model.
      /// This is the only way to change ownership of the tuned model.
      /// The current owner will be downgraded to writer role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse TransferOwnership(global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferOwnership, null, options, request);
      }
      /// <summary>
      /// Transfers ownership of the tuned model.
      /// This is the only way to change ownership of the tuned model.
      /// The current owner will be downgraded to writer role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse> TransferOwnershipAsync(global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferOwnershipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers ownership of the tuned model.
      /// This is the only way to change ownership of the tuned model.
      /// The current owner will be downgraded to writer role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse> TransferOwnershipAsync(global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferOwnership, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PermissionServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PermissionServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PermissionServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreatePermission, serviceImpl.CreatePermission)
          .AddMethod(__Method_GetPermission, serviceImpl.GetPermission)
          .AddMethod(__Method_ListPermissions, serviceImpl.ListPermissions)
          .AddMethod(__Method_UpdatePermission, serviceImpl.UpdatePermission)
          .AddMethod(__Method_DeletePermission, serviceImpl.DeletePermission)
          .AddMethod(__Method_TransferOwnership, serviceImpl.TransferOwnership).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PermissionServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreatePermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.CreatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(serviceImpl.CreatePermission));
      serviceBinder.AddMethod(__Method_GetPermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.GetPermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(serviceImpl.GetPermission));
      serviceBinder.AddMethod(__Method_ListPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsRequest, global::Google.Ai.Generativelanguage.V1Beta3.ListPermissionsResponse>(serviceImpl.ListPermissions));
      serviceBinder.AddMethod(__Method_UpdatePermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.UpdatePermissionRequest, global::Google.Ai.Generativelanguage.V1Beta3.Permission>(serviceImpl.UpdatePermission));
      serviceBinder.AddMethod(__Method_DeletePermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.DeletePermissionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeletePermission));
      serviceBinder.AddMethod(__Method_TransferOwnership, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipRequest, global::Google.Ai.Generativelanguage.V1Beta3.TransferOwnershipResponse>(serviceImpl.TransferOwnership));
    }

  }
}
#endregion
